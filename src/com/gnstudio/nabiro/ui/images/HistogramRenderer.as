package com.gnstudio.nabiro.ui.images {		/**	 *	 * GNstudio nabiro	 * =====================================================================	 * Copyright(c) 2009	 * http://www.gnstudio.com	 *	 *	 *	 * This file is part of the nabiro flash platform framework	 *	 *	 * nabiro is free software; you can redistribute it and/or modify	 * it under the terms of the GNU Lesser General Public License as published by	 * the Free Software Foundation; either version 3 of the License, or	 * at your option) any later version.	 *	 * nabiro is distributed in the hope that it will be useful,	 * but WITHOUT ANY WARRANTY; without even the implied warranty of	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	 * GNU General Public License for more details.	 *	 * You should have received a copy of the GNU Lesser General Public License	 * along with Intelligere SCS; if not, write to the Free Software	 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA	 * =====================================================================	 *	 *	 *	 *   @package  nabiro	 *	 *   @version  0.9	 *   @idea maker 			Giorgio Natili [ g.natili@gnstudio.com ]	 *   @author 					Giorgio Natili [ g.natili@gnstudio.com ]	 *   	 *	 	 */		import flash.display.Shape;	import __AS3__.vec.Vector;		internal class HistogramRenderer extends Shape {				//---------------------------------------------------------------------		//		//  Settings		//		//---------------------------------------------------------------------				public static const BLACK_CLIP : Number = 0.02;		public static const WHITE_CLIP : Number = 0.02;						//---------------------------------------------------------------------		//		//  Variables		//		//---------------------------------------------------------------------				private var color : uint;		private var w : Number;		private var h : Number;				private var blackClipping : Number;		private var whiteClipping : Number;				//---------------------------------------------------------------------		//		//  Constructor		//		//---------------------------------------------------------------------				public function HistogramRenderer( width : uint, height : uint, color : uint = 0x333333 ) {						super( );						this.color = color;			w = width;			h = height;		}						//---------------------------------------------------------------------		//		//  Public methods		//		//---------------------------------------------------------------------				public function setVector( vector : Vector.<Number> ) : void {						// Clip out blacks and whites for a more accurate display			var beginning : int = 1;			var end : int = 0xFF - 1;						var i : int = beginning, n : int = end;			var max : int = 0;			for ( ; i < n; i++ ) {				if ( vector[ i ] > max ) max = vector[ i ];			}						var sX : Number = ( w - 1 ) / end;			var sY : Number = ( h - 1 ) * ( 1 / max );						var v : Number;			blackClipping = 0;			whiteClipping = 0;			graphics.clear( );			graphics.beginFill( color );						for ( i = beginning; i < n; i++ ) {				v = vector[ i ] * sY;				if ( blackClipping == 0 && v > BLACK_CLIP * h ) {					blackClipping = i * sX;				} else if ( v > WHITE_CLIP * h ) {					whiteClipping = i * sX + 1;				}				graphics.lineTo( i * sX, -v );			}						graphics.lineTo( w - 1, 0 );			graphics.lineTo( 0, 0 );			graphics.endFill( );		}				public function getBlackClipping( ) : Number {			return blackClipping;		}				public function getWhiteClipping( ) : Number {			return whiteClipping;		}	}}