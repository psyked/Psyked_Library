package couk.psyked.pixelbender
{

	import flash.display.Shader;
	import flash.display.ShaderParameter;
	import flash.utils.ByteArray;

	/**
	 * Generated by PBJtoAS http://blog.minim.pl/PBJtoAS
	 *
	 * namespace : com.adobe.air.samples.BlackBookSafe
	 * vendor : Adobe
	 * version : 1
	 * description : Shake sample filter
	 */

	public dynamic class ShakeShader extends Shader
	{

		static private var instance:ShakeShader;

		private var data2:Object;

		public function ShakeShader()
		{
			var ba:ByteArray = new ByteArray();
			var bytes:Array = 'F85A15D33DEF53D090BFBF5B 9AB59314B 4 4ACD995AA92C324D6409A37E58089 92192ABB271AB311A44116D34 C7ED3D2BEF6F6 626927F85DBA7D644 69838FB7752B87D201065F4777B385FFBFE79E48040C79B768749211C3963E4A44BC95217504FC75DA44D5F48EE12955DB299CD 6326C6E8E137E61EE1E9F6EA78792E66E119C27F981BBC4 419F3A4 BB24B47E0A0144A32DFE413 AFA659E31C9F4108DABD940 9A1805C57AF2755DE1E97A9FC80EBD0 D 6AF72A415457E2448AA89A742B240CF4B8A5998D49C4B6C6D20 27746A89B3FCA 6D3897443B6F9476D4E C5AD49EA453E145239EB2145A28 AE4DCE6AA504D8E3D7A2AC32D9C84B8474911AC7FEFFD9CEB31F51C255560AF6227D7B76F7D52E2B1386D6457293F5430ADA0209BF888908818C3E854B5A075914E8C2C8A27EAC2 DC9A1B4814B9CCC2CA677B56984D6 2C264537CB170 FF43D 6CEE8DD43AFA248D495343E 6A7DAEFA97F1AF0CC91AB9F6251FE21FD68D649C7F02EE811 BFC8DD5EB709AF94DCBBE 0B87AC4F4CE1C2B7D18136FE3A55F1CF8F17C5C7F3660192A46BC2FD55E95BE6F29A134608C2FD86D 979DC97FA 1FCE1D12E79 DB9E8CE77A116B9 23DE7C03E6C236A1C7A48A25C267B822A312E51D7FCAD1E4E973678DE963E582B1C6E92 FD67076122F7235195F4023261E72693CAADF68AC4F27788E6BAF72B82C8F5740E9D1DE4CF7DA2B9A7738AE761C3760AEEC34617B9A67BEEFE33F D79948FF31DF2DD6CD178 6237928F7 86FE8FFC7739D4DF7995FF0B59F75AE76B4A79F61727E50E31E70F45FE15E832C1E66F7B4 F70CDCF7B60F9BDFE372B77 3385D64696F 96FA2A0BE61165EE76BFD34E7D36F25775461779CD87C8E78BD5C20B3BBB47F2DF04AE9DC42C31F674267F3 6 1BEFF207BF5B877E9BF56C0735B8D7EFD936E90EE591C43443A4E6728ED4AF5 DFF6B967F563F7947B61FFB4B237F1B273F33273FB35E F7A7FB5F4747FC3FF15EB71DD30 FCD4E 9BE1F41406AA3 47D194F7D9979EF8570C34D8D789940BD788341D2AD8E'.split( '' );
			var i:uint = 0;

			while ( bytes.length )
			{
				ba.position = i;
				ba.writeByte( parseInt( bytes.shift() + bytes.shift(), 16 ) - 128 );
				i++;
			}
			ba.uncompress();

			super( ba );
			data2 = this[ 'data' ];
		}

		public function setDefaultParameters():void
		{
			var j:uint;

			for ( var i:String in data2 )
			{
				if ( data2[ i ] is ShaderParameter )
				{
					if ( data2[ i ].value[ 0 ] is Array )
					{
						for ( j = 0; j < data2[ i ].value.length; j++ )
						{
							ShaderParameter( data2[ i ]).value[ j ] = ShaderParameter( data2[ i ])[ 'defaultValue' ][ j ].concat();
						}
					}
					else
					{
						ShaderParameter( data2[ i ]).value = ShaderParameter( data2[ i ])[ 'defaultValue' ].concat();
					}
				}
			}
		}

		public function get weight():Number
		{
			return Number( data2.weight.value[ 0 ]);
		}

		/**
		 * @param float_ from 0 to 20
		 */
		public function set weight( float_:Number ):void
		{
			data2.weight.value[ 0 ] = float_;
		}

		public function get waves():Number
		{
			return Number( data2.waves.value[ 0 ]);
		}

		/**
		 * @param float_ from 0 to 20
		 */
		public function set waves( float_:Number ):void
		{
			data2.waves.value[ 0 ] = float_;
		}

		public function get transition():Number
		{
			return Number( data2.transition.value[ 0 ]);
		}

		/**
		 * @param float_ from 0 to 1
		 */
		public function set transition( float_:Number ):void
		{
			data2.transition.value[ 0 ] = float_;
		}

		public function get height():Number
		{
			return Number( data2.height.value[ 0 ]);
		}

		/**
		 * @param float_ from 0 to 1024
		 */
		public function set height( float_:Number ):void
		{
			data2.height.value[ 0 ] = float_;
		}

		public function get width():Number
		{
			return Number( data2.width.value[ 0 ]);
		}

		/**
		 * @param float_ from 0 to 1024
		 */
		public function set width( float_:Number ):void
		{
			data2.width.value[ 0 ] = float_;
		}

		static public function getInstance():ShakeShader
		{
			if ( instance )
			{
				return instance;
			}
			else
			{
				instance = new ShakeShader();
				return instance;
			}
		}
	}
}