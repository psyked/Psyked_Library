package couk.psyked.pixelbender
{

	import flash.display.Shader;
	import flash.display.ShaderParameter;
	import flash.utils.ByteArray;

	/**
	 * Generated by PBJtoAS http://blog.minim.pl/PBJtoAS
	 *
	 * namespace : com.rphelan
	 * vendor : Ryan Phelan
	 * version : 1
	 * description : A simple implementation of zoom blur, using 15 levels of blur.
	 */

	public dynamic class ZoomblurShader extends Shader
	{

		static private var instance:ZoomblurShader;

		private var data2:Object;

		public function ZoomblurShader()
		{
			var ba:ByteArray = new ByteArray();
			var bytes:Array = 'F85A3DD33DCE64B0989CA7A936D869D634884985F48831C850C1969045CAC81C2E3882 A43A486A245F6141F95D065997689D8B8FAAA2E26 7A75817806D8B5C67ECA8E811F024E4B4636F1BC91C4F8F8C405F8E E DD1FBE9155FF635D03248C4A491993516E717B2959A375D11543149716BDAE87E3395BBA31997 951E0D4904BA24A132C34FC1797 94AD2491B27123A94D667661C5FD092BF2328D5DE95 93E607DCD1E4A11CC8B3BEA9756B0E19E507DF3D4157B4664711C7B9159489CF71ECA74EF11D6929F97C962EAAE9D90BDE824D81E BAAAD6772FE D661EB04650914AD43A449D7B64C47443A5EC68A7 76D431757FB84C59EE162859EFE44C5 9A586817460B578 88D8F3535A29C3448DB6CB548508B29E24947B343A97C865FAC6F7BD442882D4FFA 0F71F103EFB96E0919BBEEA5BC7B8589E8FD7281E5BBFC77D1CA45BBF70 93386EB7BDE3DD67FF24E4E 2231C93754FC9 E2BFDFB1AEAA7B9D3B77BE64F 2139CC77396AE F 7CEF2365C4CC1B8DC9EBB49F1F4CEC375B4F512D3FF6FDC6FE6C090E0E67D7CD67F8F896BA392'.split( '' );
			var i:uint = 0;

			while ( bytes.length )
			{
				ba.position = i;
				ba.writeByte( parseInt( bytes.shift() + bytes.shift(), 16 ) - 128 );
				i++;
			}
			ba.uncompress();

			super( ba );
			data2 = this[ 'data' ];
		}

		public function setDefaultParameters():void
		{
			var j:uint;

			for ( var i:String in data2 )
			{
				if ( data2[ i ] is ShaderParameter )
				{
					if ( data2[ i ].value[ 0 ] is Array )
					{
						for ( j = 0; j < data2[ i ].value.length; j++ )
						{
							ShaderParameter( data2[ i ]).value[ j ] = ShaderParameter( data2[ i ])[ 'defaultValue' ][ j ].concat();
						}
					}
					else
					{
						ShaderParameter( data2[ i ]).value = ShaderParameter( data2[ i ])[ 'defaultValue' ].concat();
					}
				}
			}
		}

		public function get amount():Number
		{
			return Number( data2.amount.value[ 0 ]);
		}

		/**
		 * @param float_ from 0 to 0.5
		 */
		public function set amount( float_:Number ):void
		{
			data2.amount.value[ 0 ] = float_;
		}

		public function get center():Array
		{
			return new Array( data2.center.value );
		}

		/**
		 * @param float2_ from 0,0 to 2048,2048
		 */
		public function set center( float2_:Array ):void
		{
			data2.center.value = float2_;
		}

		static public function getInstance():ZoomblurShader
		{
			if ( instance )
			{
				return instance;
			}
			else
			{
				instance = new ZoomblurShader();
				return instance;
			}
		}
	}
}